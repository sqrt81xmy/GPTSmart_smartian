{
  "res": [
    {
      "functionName": "transfer",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "transfer(NormalUser2, 100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the transfer function, we need to initialize the contract with the constructor and then call the transfer function with sufficient balance."
      ]
    },
    {
      "functionName": "transferFrom",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "approve(NormalUser2, 100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "transferFrom(TargetOwner, NormalUser3, 100)",
            "msgValue": 0,
            "msgSender": "NormalUser2"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the transferFrom function, we need to initialize the contract, approve a spender, and then call transferFrom with the approved amount."
      ]
    },
    {
      "functionName": "approve",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "approve(NormalUser2, 100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the approve function, we need to initialize the contract and then call approve with a non-zero value."
      ]
    },
    {
      "functionName": "addApproval",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "approve(NormalUser2, 100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "addApproval(NormalUser2, 50)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the addApproval function, we need to initialize the contract, approve a spender, and then call addApproval with a value that does not exceed the allowance."
      ]
    },
    {
      "functionName": "subApproval",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "approve(NormalUser2, 100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "subApproval(NormalUser2, 50)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the subApproval function, we need to initialize the contract, approve a spender, and then call subApproval with a value that does not exceed the allowance."
      ]
    },
    {
      "functionName": "burn",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "burn(100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the burn function, we need to initialize the contract and then call burn with an amount that does not exceed the sender's balance."
      ]
    },
    {
      "functionName": "upgrade",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "setUpgradeAgent(TARG_CONTRACT)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "upgrade(100)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the upgrade function, we need to initialize the contract, set an upgrade agent, and then call upgrade with a non-zero value."
      ]
    },
    {
      "functionName": "mint",
      "sequences": [
        [
          {
            "functionName": "HYIPToken(TargetOwner, 'HYIPToken', 'HYIP', 1000000, 18)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "setMintAgent(NormalUser2, true)",
            "msgValue": 0,
            "msgSender": "TargetOwner"
          },
          {
            "functionName": "mint(NormalUser3, 100)",
            "msgValue": 0,
            "msgSender": "NormalUser2"
          }
        ]
      ],
      "reason": [
        "To reach the first block in the mint function, we need to initialize the contract, set a mint agent, and then call mint with a non-zero value."
      ]
    }
  ]
}