// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Collections.Generic;
using Avro;
using Avro.Specific;

namespace Nethermind.PubSub.Kafka.Consumer.Avro.Models
{
	public partial class Receipt : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse(@"{""type"":""record"",""name"":""Receipt"",""namespace"":""Nethermind.PubSub.Kafka.Avro.Models"",""fields"":[{""name"":""blockHash"",""type"":""string""},{""name"":""blockNumber"",""type"":""long""},{""name"":""contractAddress"",""type"":[""null"",""string""]},{""name"":""cumulativeGasUsed"",""type"":""long""},{""name"":""fromAddr"",""type"":""string""},{""name"":""gasUsed"",""type"":""long""},{""name"":""logs"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""Log"",""namespace"":""Nethermind.PubSub.Kafka.Avro.Models"",""fields"":[{""name"":""address"",""type"":""string""},{""name"":""logTopics"",""type"":{""type"":""array"",""items"":""string""}},{""name"":""data"",""type"":""string""},{""name"":""blockNumber"",""type"":""long""},{""name"":""transactionHash"",""type"":""string""},{""name"":""transactionIndex"",""type"":""int""},{""name"":""blockHash"",""type"":""string""},{""name"":""logIndex"",""type"":""int""},{""name"":""removed"",""type"":""boolean""}]}}},{""name"":""logsBloom"",""type"":""string""},{""name"":""status"",""type"":""int""},{""name"":""toAddr"",""type"":[""null"",""string""]},{""name"":""transactionHash"",""type"":""string""},{""name"":""transactionIndex"",""type"":""int""}]}");
		private string _blockHash;
		private long _blockNumber;
		private string _contractAddress;
		private long _cumulativeGasUsed;
		private string _fromAddr;
		private long _gasUsed;
		private IList<Log> _logs;
		private string _logsBloom;
		private int _status;
		private string _toAddr;
		private string _transactionHash;
		private int _transactionIndex;
		public virtual Schema Schema
		{
			get
			{
				return Receipt._SCHEMA;
			}
		}
		public string blockHash
		{
			get
			{
				return this._blockHash;
			}
			set
			{
				this._blockHash = value;
			}
		}
		public long blockNumber
		{
			get
			{
				return this._blockNumber;
			}
			set
			{
				this._blockNumber = value;
			}
		}
		public string contractAddress
		{
			get
			{
				return this._contractAddress;
			}
			set
			{
				this._contractAddress = value;
			}
		}
		public long cumulativeGasUsed
		{
			get
			{
				return this._cumulativeGasUsed;
			}
			set
			{
				this._cumulativeGasUsed = value;
			}
		}
		public string fromAddr
		{
			get
			{
				return this._fromAddr;
			}
			set
			{
				this._fromAddr = value;
			}
		}
		public long gasUsed
		{
			get
			{
				return this._gasUsed;
			}
			set
			{
				this._gasUsed = value;
			}
		}
		public IList<Log> logs
		{
			get
			{
				return this._logs;
			}
			set
			{
				this._logs = value;
			}
		}
		public string logsBloom
		{
			get
			{
				return this._logsBloom;
			}
			set
			{
				this._logsBloom = value;
			}
		}
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				this._status = value;
			}
		}
		public string toAddr
		{
			get
			{
				return this._toAddr;
			}
			set
			{
				this._toAddr = value;
			}
		}
		public string transactionHash
		{
			get
			{
				return this._transactionHash;
			}
			set
			{
				this._transactionHash = value;
			}
		}
		public int transactionIndex
		{
			get
			{
				return this._transactionIndex;
			}
			set
			{
				this._transactionIndex = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.blockHash;
			case 1: return this.blockNumber;
			case 2: return this.contractAddress;
			case 3: return this.cumulativeGasUsed;
			case 4: return this.fromAddr;
			case 5: return this.gasUsed;
			case 6: return this.logs;
			case 7: return this.logsBloom;
			case 8: return this.status;
			case 9: return this.toAddr;
			case 10: return this.transactionHash;
			case 11: return this.transactionIndex;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.blockHash = (System.String)fieldValue; break;
			case 1: this.blockNumber = (System.Int64)fieldValue; break;
			case 2: this.contractAddress = (System.String)fieldValue; break;
			case 3: this.cumulativeGasUsed = (System.Int64)fieldValue; break;
			case 4: this.fromAddr = (System.String)fieldValue; break;
			case 5: this.gasUsed = (System.Int64)fieldValue; break;
			case 6: this.logs = (IList<Log>)fieldValue; break;
			case 7: this.logsBloom = (System.String)fieldValue; break;
			case 8: this.status = (System.Int32)fieldValue; break;
			case 9: this.toAddr = (System.String)fieldValue; break;
			case 10: this.transactionHash = (System.String)fieldValue; break;
			case 11: this.transactionIndex = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
